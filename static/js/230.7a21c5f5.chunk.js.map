{"version":3,"file":"static/js/230.7a21c5f5.chunk.js","mappings":"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","sources":["api/Api.js","webpack://goit-react-hw-05-movies/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.jsx","webpack://goit-react-hw-05-movies/./src/components/FilmInfo/FilmInfo.module.css?b011","components/FilmInfo/FilmInfo.jsx","webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","pages/About/About.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c4c535d4c92d9e8cd45d9f8a1dc15d0d',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getInfoFilms = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getSearchFilms = async value => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query: value,\n    },\n  });\n  return data;\n};\n\nexport const getInfoCast = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getInfoReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"more_info\":\"AdditionalInfo_more_info__uObmC\",\"list\":\"AdditionalInfo_list__80tG8\",\"link\":\"AdditionalInfo_link__FpLWJ\"};","import { Outlet, Link, useLocation } from 'react-router-dom';\n\nimport s from './AdditionalInfo.module.css';\n\nconst AdditionalInfo = () => {\n  const location = useLocation();\n  return (\n    <>\n      <div className={s.more_info}>\n        <h4>Additional information</h4>\n        <ul className={s.list}>\n          <li>\n            <Link\n              to=\"cast\"\n              state={{ from: location.state?.from }}\n              className={s.link}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"reviews\"\n              state={{ from: location.state?.from }}\n              className={s.link}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilmInfo_wrap__sGbIC\",\"info\":\"FilmInfo_info__+pygX\"};","import PropTypes from 'prop-types';\n\nimport s from './FilmInfo.module.css';\n\nconst FilmInfo = ({\n  posterPath,\n  title,\n  releaseDate,\n  voteAverage,\n  overview,\n  filmGenres,\n  poster,\n}) => {\n  return (\n    <div className={s.wrap}>\n      <img\n        alt={title}\n        src={\n          posterPath\n            ? poster\n            : 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/925px-Unknown_person.jpg'\n        }\n        width=\"250\"\n      />\n      <div className={s.info}>\n        <h2>\n          {title} &#40;{releaseDate?.slice(0, 4)}&#41;\n        </h2>\n        <p>User score&#58; {Math.round((voteAverage / 10) * 100)}&#37;</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{filmGenres}</p>\n      </div>\n    </div>\n  );\n};\nexport default FilmInfo;\n\nFilmInfo.propTypes = {\n  posterPath: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  voteAverage: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  filmGenres: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\"};","import PropTypes from 'prop-types';\n\nimport s from './Button.module.css';\n\nconst Button = ({ navigate, location }) => {\n  return (\n    <button type=\"button\" className={s.btn} onClick={() => navigate(location)}>\n      &#10094; Go back\n    </button>\n  );\n};\nexport default Button;\n\nButton.propTypes = {\n  navigate: PropTypes.func.isRequired,\n  location: PropTypes.string.isRequired,\n};\n","import { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nimport { getInfoFilms } from 'api/Api';\n\nimport Loader from 'components/Loader';\nimport AdditionalInfo from 'components/AdditionalInfo';\nimport FilmInfo from 'components/FilmInfo';\nimport Button from 'components/Button';\n\nconst About = () => {\n  const [result, setResult] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchFilms();\n    // eslint-disable-next-line\n  }, []);\n\n  const fetchFilms = async () => {\n    setLoading(true);\n    try {\n      const data = await getInfoFilms(id);\n      setResult(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    result;\n\n  let posterImg =\n    poster_path && 'https://image.tmdb.org/t/p/w500' + poster_path;\n\n  const filmGenres = genres?.map(el => el.name).join(', ');\n\n  return (\n    <>\n      <Button location={location.state?.from} navigate={navigate} />\n\n      {loading && <Loader />}\n      {error && <h2>Oops, something went wrong...</h2>}\n      <FilmInfo\n        posterPath={poster_path}\n        title={title}\n        releaseDate={release_date}\n        voteAverage={vote_average}\n        overview={overview}\n        filmGenres={filmGenres}\n        poster={posterImg}\n      />\n      <AdditionalInfo />\n    </>\n  );\n};\n\nexport default About;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingFilms","get","data","getInfoFilms","id","getSearchFilms","value","query","getInfoCast","page","getInfoReviews","location","useLocation","className","s","to","state","from","posterPath","title","releaseDate","voteAverage","overview","filmGenres","poster","alt","src","width","slice","Math","round","navigate","type","onClick","useState","result","setResult","loading","setLoading","error","setError","useParams","useNavigate","useEffect","fetchFilms","console","log","poster_path","release_date","genres","vote_average","posterImg","map","el","name","join","Loader"],"sourceRoot":""}