{"version":3,"file":"static/js/168.6b2a1e00.chunk.js","mappings":"mTAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAgB,mCAAG,sGACPN,EAASO,IAAI,sBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAT,gBAAsBG,IADnB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAASO,IAAT,eAA6B,CAClDJ,OAAQ,CACNU,MAAOD,KAHiB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdM,EAAW,mCAAG,WAAMJ,GAAN,yFACFV,EAASO,IAAT,gBAAsBG,EAAtB,YAAoC,CACzDP,OAAQ,CACNY,KAAM,KAHe,uBACjBP,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXQ,EAAc,mCAAG,WAAMN,GAAN,yFACLV,EAASO,IAAT,gBAAsBG,EAAtB,aADK,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qD,2ICrC3B,EAAuB,sB,mBCsDvB,EA/CgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQb,GAAOc,EAAAA,EAAAA,MAAPd,IAERe,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAU,mCAAG,2FACjBL,GAAW,GADM,mBAGIL,EAAAA,EAAAA,IAAeN,GAHnB,OAGTF,EAHS,OAIfW,EAAWX,EAAKmB,SAJD,gDAMfC,QAAQC,IAAR,MACAN,EAAS,EAAD,IAPO,yBASfF,GAAW,GATI,4EAAH,qDAaVS,EAAcZ,EAAQa,KAAI,YAA8B,IAA3BrB,EAA0B,EAA1BA,GAAIsB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7C,OACE,2BACE,mCAAeD,MACf,uBAAIC,MAFGvB,EAKZ,IAED,OACE,gCACGU,IAAW,SAACc,EAAA,EAAD,IACXZ,IAAS,0DACTJ,EAAQiB,QACP,wBAAKL,KAEL,cAAGM,UAAWC,EAAd,wDAIP,C","sources":["api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c4c535d4c92d9e8cd45d9f8a1dc15d0d',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getInfoFilms = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getSearchFilms = async value => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query: value,\n    },\n  });\n  return data;\n};\n\nexport const getInfoCast = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getInfoReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Reviews_text__EqLvx\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getInfoReviews } from 'api/Api';\nimport s from './Reviews.module.css';\n\nimport Loader from 'components/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchFilms();\n    // eslint-disable-next-line\n  }, []);\n\n  const fetchFilms = async () => {\n    setLoading(true);\n    try {\n      const data = await getInfoReviews(id);\n      setReviews(data.results);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filmReviews = reviews.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <p>Autor&#58; {author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h2>Oops, something went wrong...</h2>}\n      {reviews.length ? (\n        <ul>{filmReviews}</ul>\n      ) : (\n        <p className={s.text}>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingFilms","get","data","getInfoFilms","id","getSearchFilms","value","query","getInfoCast","page","getInfoReviews","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","useEffect","fetchFilms","results","console","log","filmReviews","map","author","content","Loader","length","className","s"],"sourceRoot":""}